# Default values for sagui-platform.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

rootStoragePath: "/mnt/sagui"
createDirectories: true

nodeSelector: 
  h2o: "true"

tolerations: []

affinity: {}

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000


database:
  enabled: true
  image:
    repository: postgis/postgis
    tag: "14-3.2"
    pullPolicy: IfNotPresent
  schema: guyane
  auth:
    dbname: sagui
    postgres_user: postgres
    postgres_password: sagui-password
    # To use an externally managed secret, declare it here, this will override the authparams above
    existingSecret: secrets-sagui-platform-database-secret
  storage:
    # We might need to specify a custom storageClass
    # Leave it commented if not needed
    # storage_class_name: default
    # Set external to true if you want to use an externally managed PV
    external: false
    pv_name: database-data
    size: 200Gi
  pgtuneConfig: |
    -- DB Version: 14
    -- OS Type: linux
    -- DB Type: mixed
    -- Total Memory (RAM): 8 GB
    -- CPUs num: 4
    -- Data Storage: ssd

    ALTER SYSTEM SET
    max_connections = '100';
    ALTER SYSTEM SET
    shared_buffers = '2GB';
    ALTER SYSTEM SET
    effective_cache_size = '6GB';
    ALTER SYSTEM SET
    maintenance_work_mem = '512MB';
    ALTER SYSTEM SET
    checkpoint_completion_target = '0.9';
    ALTER SYSTEM SET
    wal_buffers = '16MB';
    ALTER SYSTEM SET
    default_statistics_target = '100';
    ALTER SYSTEM SET
    random_page_cost = '1.1';
    ALTER SYSTEM SET
    effective_io_concurrency = '200';
    ALTER SYSTEM SET
    work_mem = '5242kB';
    ALTER SYSTEM SET
    min_wal_size = '1GB';
    ALTER SYSTEM SET
    max_wal_size = '4GB';
    ALTER SYSTEM SET
    max_worker_processes = '4';
    ALTER SYSTEM SET
    max_parallel_workers_per_gather = '2';
    ALTER SYSTEM SET
    max_parallel_workers = '4';
    ALTER SYSTEM SET
    max_parallel_maintenance_workers = '2';

frontend:
  enabled: true
  image:
    repository: pigeosolutions/sagui-ui
    tag: "latest"
    pullPolicy: Always
  securityContext: {}

backend:
  enabled: true
  cronjob:
    enabled: true
    schedule: "45 6 * * *"
  image:
    repository: pigeosolutions/sagui-backend
    tag: "latest"
    pullPolicy: Always
  securityContext:
    runAsUser: 1001
    runAsGroup: 1001
    fsGroup: 1001
  storage:
    # We might need to specify a custom storageClass
    # Leave it commented if not needed
    # storage_class_name: default
    # Set external to true if you want to use an externally managed PV
    external: false
    pv_name: django-static-files
    size: 1Gi
  settings:
    # To use an externally managed secret, declare it here, this will override the authparams below
    allowedHosts: 
      - sagui.pigeo.fr
      - sagui.hydro-matters.fr
      - localhost
  auth:
    # To use an externally managed secret, declare it here, this will override the authparams below
    existingSecret: secrets-sagui-platform-backend-secret
    djangoSecretKey: django_secret_key
    djangoSuperuserPassword: django_superuser_password

pgTileserv:
  enabled: true
  image:
    repository: pigeosolutions/pg_tileserv
    tag: "alpine-latest"
    pullPolicy: Always
  securityContext: {}
  auth:
    # To use an externally managed secret, declare it here, this will override the authparams below
    existingSecret: secrets-sagui-platform-pg-tileserv-secret
    databaseUrl: postgres://tileserv:tileserv@database/sagui


hyfaaScheduler:
  enabled: true
  schedule: "10 6 * * *"
  image:
    repository: pigeosolutions/hyfaa-scheduler
    tag: "20240611-1619-ec947ed"
    pullPolicy: IfNotPresent
  securityContext:
    runAsUser: 1001
    runAsGroup: 1001
    fsGroup: 1001
  storage:
    # We might need to specify a custom storageClass
    # Leave it commented if not needed
    # storage_class_name: default
    # Set external to true if you want to use an externally managed PV
    external: false
    pv_name: hyfaa-scheduler-data
    size: 200Gi
  auth:
    # To use an externally managed secret, declare it here, this will override the authparams below
    # existingSecret: secrets-sagui-platform-hyfaa-scheduler-secret
    apikey: hydrowebnextsupersecretapikey

atmo:
  enabled: false
  schedule: "00 6 * * *"
  image:
    repository: pigeosolutions/sagui_atmo
    tag: "latest"
    pullPolicy: IfNotPresent
  securityContext:
    runAsUser: 1001
    runAsGroup: 1001
    fsGroup: 1001
  storage:
    # We might need to specify a custom storageClass
    # Leave it commented if not needed
    # storage_class_name: default
    # Set external to true if you want to use an externally managed PV
    external: false
    pv_name: atmo-data
    size: 1Gi

# SMTP config
smtp:
  enabled: true
  auth:
    # To use an externally managed secret, declare it here, this will override the authparams below
    existingSecret: secrets-sagui-platform-smtp-secret
    host: smtp.gmail.com
    port: "587"
    useTls: "True"
    user: "myaddress@gmail.com"
    password: "verysecretkey"

nginx:
  enabled: true
  nodeSelector:
    h2o: "true"
  replicaCount: 1
  containerSecurityContext:
    runAsUser: 999
    runAsGroup: 999
  extraVolumes:
    - name: nginx-home
      configMap:
        name: sagui-sagui-platform-nginx-home
    - name: atmo-data
      persistentVolumeClaim:
        claimName: sagui-sagui-platform-atmo-data
    - name: django-static-files
      persistentVolumeClaim:
        claimName: sagui-sagui-platform-django-static-files
  extraVolumeMounts:
    - name: nginx-home
      mountPath: /opt/bitnami/nginx/html
      readOnly: true
    - name: atmo-data
      mountPath: /opt/bitnami/nginx/html/atmo
      readOnly: true
    - name: django-static-files
      mountPath: /opt/bitnami/nginx/html/backend_static
      readOnly: true
  resources:
    limits:
      memory: "100Mi"
      cpu: 10m
    requests:
      memory: "50Mi"
      cpu: 5m
  livenessProbe:
    enabled: true
  readinessProbe:
    enabled: true
  service:
    type: ClusterIP

varnish:
  enabled: true
  image:
    repository: varnish
    tag: "stable"
    pullPolicy: Always
  securityContext: {}

sshd:
  enabled: false
  image:
    repository: ghcr.io/pi-geosolutions/docker-sshd
    tag: latest
    pullPolicy: IfNotPresent
  # imagePullSecrets:
  #   - name: ghcr-login-secret
  # if port >= 30000, it will directly use a nodePort service (preferred)
  # if < 30000, it will create a LoadBalancer service, which will take more resources
  port: 30000
  users: 
    - name: sftp
      uid: 1001
      gid: 1001
  sftponly: true
  # You can provide the SSH host keys. That will ensure that the sshd server will 
  # keep the same ID between deployments. Recommended way is to provide them 
  # with set-file options but you can also place the content here (just, it's very noisy)
  # hostKeys: 
  #   idRsa: {}
  #   idRsaPub: {}
  #   idEcdsa: {}
  #   idEcdsaPub: {}
  #   idEd25519: {}
  #   idEd25519Pub: {}
  # authorizedKeys:
  #   - name: sftp
  #     keys: |
  #         ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIDsBuvOvbquX5uX+UFvEG+9kqpTysDRMbfpAPM56N1UU jpommier@Thor

  

ingress:
  enabled: true
  className: ""
  annotations: 
    cert-manager.io/cluster-issuer: letsencrypt-prod
    cert-manager.io/issue-temporary-certificate: "true"
    acme.cert-manager.io/http01-edit-in-place: "true"
    kubernetes.io/ingress.class: traefik
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: sagui.hydro-matters.fr
      paths:
        - path: /
          pathType: Prefix
          service: varnish-svc
          portNumber: 80
  # tls: []
  tls:
   - secretName: sagui-tls
     hosts:
       - sagui.hydro-matters.fr

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
